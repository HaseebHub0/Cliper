{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theal\\\\OneDrive\\\\Desktop\\\\Instagrame clone\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Mock authentication functions\n  const login = async (email, password) => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock user data\n      const mockUser = {\n        id: '1',\n        username: 'johndoe',\n        fullName: 'John Doe',\n        email: email,\n        profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        bio: 'Living life one photo at a time ðŸ“¸',\n        followers: ['2', '3', '4'],\n        following: ['2', '3'],\n        posts: []\n      };\n      setCurrentUser(mockUser);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n    } catch (error) {\n      throw new Error('Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async (email, password, username, fullName) => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock user data\n      const mockUser = {\n        id: Date.now().toString(),\n        username: username,\n        fullName: fullName,\n        email: email,\n        profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        bio: '',\n        followers: [],\n        following: [],\n        posts: []\n      };\n      setCurrentUser(mockUser);\n      localStorage.setItem('user', JSON.stringify(mockUser));\n    } catch (error) {\n      throw new Error('Registration failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  useEffect(() => {\n    // Check for existing user session\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/DmieS2Wf0Hikxz7Vq2rSsgaaJk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","isLoading","setIsLoading","login","email","password","Promise","resolve","setTimeout","mockUser","id","username","fullName","profilePicture","bio","followers","following","posts","localStorage","setItem","JSON","stringify","error","register","Date","now","toString","logout","removeItem","savedUser","getItem","parse","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/theal/OneDrive/Desktop/Instagrame clone/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, AuthContextType } from '../types';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Mock authentication functions\r\n  const login = async (email: string, password: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock user data\r\n      const mockUser: User = {\r\n        id: '1',\r\n        username: 'johndoe',\r\n        fullName: 'John Doe',\r\n        email: email,\r\n        profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n        bio: 'Living life one photo at a time ðŸ“¸',\r\n        followers: ['2', '3', '4'],\r\n        following: ['2', '3'],\r\n        posts: []\r\n      };\r\n      \r\n      setCurrentUser(mockUser);\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n    } catch (error) {\r\n      throw new Error('Login failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (email: string, password: string, username: string, fullName: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock user data\r\n      const mockUser: User = {\r\n        id: Date.now().toString(),\r\n        username: username,\r\n        fullName: fullName,\r\n        email: email,\r\n        profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n        bio: '',\r\n        followers: [],\r\n        following: [],\r\n        posts: []\r\n      };\r\n      \r\n      setCurrentUser(mockUser);\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n    } catch (error) {\r\n      throw new Error('Registration failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check for existing user session\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      setCurrentUser(JSON.parse(savedUser));\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout,\r\n    isLoading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}